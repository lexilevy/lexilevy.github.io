define(["../../polymer/polymer-legacy.js","../../polymer/lib/legacy/polymer-fn.js","../../polymer/lib/utils/html-tag.js","../iron-scroll-target-behavior.js"],function(_polymerLegacy,_polymerFn,_htmlTag,_ironScrollTargetBehavior){"use strict";(0,_polymerFn.Polymer)({_template:_htmlTag.html`
    <style>
      :host {
        display: block;
        font: 14px arial;
      }

      .scrollState {
        border-left: 1px solid #ccc;
        border-right: 1px solid #ccc;
        border-bottom: 1px solid #ccc;
        font-weight: bold;
        background-color: #eee;
        position: fixed;
        top: 0;
        left: calc(50% - 100px);
        padding: 10px;
        width: 220px;
        text-align: center;
      }

      .item {
        border-bottom: 1px solid #ccc;
        background-color: white;
        padding: 20px;
        width: 200%;
      }

    </style>
    <div class="scrollState">scrollTop: [[xScrollTop]] - scrollLeft: [[xScrollLeft]]</div>
    <template is="dom-repeat" items="[[_getItems(itemCount)]]">
      <div class="item">[[index]]</div>
    </template>
`,is:"x-scrollable",properties:{xScrollTop:{type:Number,readOnly:!0,value:0},xScrollLeft:{type:Number,readOnly:!0,value:0},itemCount:{type:Number,value:200}},behaviors:[_ironScrollTargetBehavior.IronScrollTargetBehavior],attached:function(){this._scrollHandler()},_scrollHandler:function(){this._setXScrollTop(this._scrollTop);this._setXScrollLeft(this._scrollLeft)},_getItems:function(itemCount){var items=Array(itemCount);while(0<itemCount){items[--itemCount]=!0}return items}})});