define(["../@polymer/lit-element/lit-element.js","../lit-html/lib/unsafe-html.js","../@fortawesome/fontawesome/index.es.js","../@fortawesome/fontawesome-free-solid/index.es.js","../@fortawesome/fontawesome-free-brands/index.es.js","../@fortawesome/fontawesome-free-regular/index.es.js","./fa-icon-css.js"],function(_litElement,_unsafeHtml,_indexEs,_indexEs2,_indexEs3,_indexEs4,_faIconCss){"use strict";_indexEs=babelHelpers.interopRequireDefault(_indexEs);_indexEs2=babelHelpers.interopRequireDefault(_indexEs2);_indexEs3=babelHelpers.interopRequireDefault(_indexEs3);_indexEs4=babelHelpers.interopRequireDefault(_indexEs4);_indexEs.default.library.add(_indexEs2.default,_indexEs3.default,_indexEs4.default);class FaIcon extends _litElement.LitElement{static get properties(){return{"icon-prefix":String,"icon-name":String,size:String,"fixed-width":Boolean,border:Boolean,"pull-left":Boolean,"pull-right":Boolean,spin:Boolean,pulse:Boolean,scale:Number,rotate:Number,"translate-x":Number,"translate-y":Number,"flip-x":Boolean,"flip-y":Boolean,"mask-group":String,"mask-name":String}}_removeFaPrefix(v){return v.replace(/^fa-/,"")}_computeIconSvgString(props){var icon={},classes=[],transform={},mask={};for(var key in props){var value=props[key];switch(key){case"icon-prefix":icon.prefix=value;break;case"icon-name":icon.iconName=this._removeFaPrefix(value);break;case"size":var size=this._removeFaPrefix(value);if(["xs","sm","lg","2x","3x","4x","5x","6x","7x","8x","9x","10x"].includes(size))classes.push("fa-"+size);break;case"fixed-width":classes.push("fa-fw");break;case"pull-left":case"pull-right":this.classList.add("fa-"+key);classes.push("fa-"+key);break;case"border":case"spin":case"pulse":classes.push("fa-"+key);break;case"scale":transform.size=16*this.scale/100;break;case"rotate":transform.rotate=value;break;case"translate-x":case"translate-y":transform[key.replace(/^translate-/,"")]=value;break;case"flip-x":transform.flipX=value;break;case"flip-y":transform.flipY=value;break;case"mask-prefix":mask.prefix=value;break;case"mask-name":mask.iconName=this._removeFaPrefix(value);break;}}return _indexEs.default.icon(icon,{classes:classes,transform:transform,mask:mask}).html}_render(props){return _litElement.html`
    <style>
      :host {
        display: inline-block;
      }
    
      svg {
        color: var(--icon-color, black);
        background-color: var(--icon-background-color, white);
      }
    </style>
    ${_faIconCss.style} ${(0,_unsafeHtml.unsafeHTML)(this._computeIconSvgString(props))}`}}window.customElements.define("fa-icon",FaIcon)});