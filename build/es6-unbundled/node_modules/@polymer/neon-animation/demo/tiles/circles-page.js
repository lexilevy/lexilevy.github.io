define(["../../../polymer/polymer-legacy.js","../../../iron-flex-layout/iron-flex-layout.js","../../../polymer/lib/legacy/polymer-fn.js","../../../polymer/lib/legacy/polymer.dom.js","../../../polymer/lib/utils/html-tag.js","../../neon-shared-element-animatable-behavior.js"],function(_polymerLegacy,_ironFlexLayout,_polymerFn,_polymerDom,_htmlTag,_neonSharedElementAnimatableBehavior){"use strict";(0,_polymerFn.Polymer)({_template:_htmlTag.html`
    <style>
      :host {
        @apply --layout-horizontal;
        @apply --layout-center-center;
      }

      .circle {
        display: inline-block;
        box-sizing: border-box;
        width: 100px;
        height: 100px;
        margin: 16px;
        border-radius: 50%;
        background: var(--color-one);
      }
    </style>

    <div>
      <div class="circle"></div>
      <div class="circle"></div>
      <div class="circle"></div>
      <div class="circle"></div>
    </div>
  `,is:"circles-page",behaviors:[_neonSharedElementAnimatableBehavior.NeonSharedElementAnimatableBehavior],properties:{animationConfig:{type:Object}},listeners:{click:"_onClick"},attached:function(){if(this.animationConfig){return}var circles=(0,_polymerDom.dom)(this.root).querySelectorAll(".circle"),circlesArray=Array.from(circles);this.animationConfig={entry:[{name:"cascaded-animation",animation:"scale-up-animation",nodes:circlesArray}],exit:[{name:"hero-animation",id:"hero",fromPage:this},{name:"cascaded-animation",animation:"scale-down-animation"}]}},_onClick:function(event){var target=(0,_polymerDom.dom)(event).rootTarget;if(target.classList.contains("circle")){this.sharedElements={hero:target};for(var nodesToScale=[],circles=(0,_polymerDom.dom)(this.root).querySelectorAll(".circle"),node,index=0;node=circles[index];index++){if(node!==event.target){nodesToScale.push(node)}}this.animationConfig.exit[1].nodes=nodesToScale;this.fire("circle-click")}}})});